\batchmode
\makeatletter
\def\input@path{{C:/Users/2010/Documents/GitHub/macs-accessories//}}
\makeatother
\documentclass[english]{article}
\usepackage{mathpazo}
\usepackage{helvet}
\usepackage{courier}
\usepackage[T1]{fontenc}
\usepackage[latin9]{inputenc}
\usepackage{geometry}
\geometry{verbose,tmargin=2.54cm,bmargin=2.54cm,lmargin=2.54cm,rmargin=2.54cm}
\usepackage{babel}
\begin{document}
ChIP-seq comparison plots

Colin Diesh

6/12/12\\


<<sources, cache=FALSE, echo=FALSE>>=
debug=FALSE
source('readplot.R')
source('knitr.R')
library(xtable)
@

<<setup, cache=FALSE, echo=FALSE>>=
atenv=loadMacsEnv('S96','HS959')
attach(atenv)
wig1$estimateScalingFactor()  
wig1$estimateVarianceAll()   
wig2$estimateScalingFactor()   
wig2$estimateVarianceAll()
wz1=wig1$Z(wig1$peaks)
wz2=wig2$Z(wig1$peaks)
wz4=wig2$Z(wig2$peaks)
wz3=wig1$Z(wig2$peaks)
@

We can use a Normalized difference score to evaluate the 'background
subtracted' ChIP-seq data. Using methods from Zheng et al. we estimate
the variance of the data and the scaling between control and treated
ChIP-seq experiments in order to calculate the normalized difference
score



<<table-demo, echo=FALSE, cache=FALSE, results=tex>>= 
retm=matrix(c(wig1$scaling,wig1$variance,wig2$scaling,wig2$variance),c(2,2))
rownames(retm)<-c('Est. Scaling factor', 'Est. Variance')
colnames(retm)<-c('S96', 'HS959')
xtable(retm) 
@

We can use this to calculate the normalized difference score, and
find the average normalized difference scores in the peak regions.
Comparing the shared and unique peaks fromdifferent strains shows
that considerably higher normalized difference scores indicate peaks

<<Q2, echo=FALSE, cache=FALSE, out.width='.49\\linewidth'>>=
r3=plotAvgZscore('Mean S96 peak NormDiff score vs HS959 synteny w=100', wig1, wig2, wz1, wz2, 'lightblue', 'orange')
r4=plotAvgZscore('Mean HS959 peak NormDiff score vs S96 synteny w=100', wig2, wig1, wz4, wz3, 'pink','orange')
@

We can use a scanning window to find the maximum average normalized
difference scores in the peak windows to localize the peaks in the
peak regions also

<<Q3, echo=FALSE, cache=FALSE, out.width='.49\\linewidth'>>=
r1=plotMaxAvgZscore('Max Avg S96 peak NormDiff score vs HS959 synteny w=100', wig1, wig2, wz1, wz2,'lightblue', 'orange')
r2=plotMaxAvgZscore('Max Avg HS959 peak NormDiff score vs S96 synteny w=100', wig2, wig1, wz4, wz3, 'pink','orange')
@

If we sort the values then we can get an idea of the differences that
exist between the shared peaks in two different strains and the peaks
that are unique to one experiment. Here, we look at the syntenic regions
in HS959 and S96 from peaks found in the other strain, and see that
the shared peaks from both have higher NormDiff scores than the peaks
that are unique to one strain.

<<Q4,echo=FALSE,cache=FALSE,out.width='.49\\linewidth'>>=
plotSortedMaxAvgZscoreX('Sorted HS959 Avg Normdiff in S96 peak regions',wig1,wig2,r3,'red','blue')
plotSortedMaxAvgZscoreX('Sorted S96 Avg Normdiff in HS959 peak regions',wig2,wig1,r4,'green','blue')
plotSortedMaxAvgZscoreX('Sorted HS959 Max Avg Normdiff in S96 peak regions',wig1,wig2,r1,'red','blue')
plotSortedMaxAvgZscoreX('Sorted S96 Max Avg Normdiff in HS959 peak regions',wig2,wig1,r2,'green','blue') 
@

If we look at the distribution of the means of the normalized difference
scores, then we can see that they cluster around a 'truncated' normal
distribution. This is interesting in some respects for what the normalized
difference score represents. It is the treated data subtracted from
the control data, so the data will have a longer tail on the 'chipseq'
side rather than the 'control' side.

<<Q5,echo=FALSE,cache=FALSE,out.width='.6\\linewidth'>>=
r2s=c(r1[['2shared']],r1[['2unique']])
corr1=match(r1[['2shared']],r2s)
corr2=match(r1[['2unique']],r2s)
r2s=(r2s-mean(r2s))/sqrt(var(r2s))
r2snorm=dnorm(r2s,mean(r2s),sqrt(var(r2s)))
r2s1norm=dnorm(r1[['2shared']],mean(r2s),sqrt(var(r2s)))
r2s2norm=dnorm(r1[['2unique']],mean(r2s),sqrt(var(r2s)))
plot(r2s,r2snorm,pch='.',col='blue')
points(r2s[corr1],r2snorm[corr1],pch=20,col='red')
points(r2s[corr2],r2snorm[corr2],pch=20,col='green')
@
\end{document}
